Changes in FatFs for the YAHAL library
======================================
  Author:  A. Terstegge, August 2018

The basis for this version of FatFs was FatFs R0.13b (April 07, 2018).
Changes have been done to better integrate FatFs into C++ code (the
library was transformed to have an object-oriented interface).

The idea is the following: A FatFs object is created with a concrete
block_io_interface. So one instance of FatFs serves exactly one
physical drive. Still there can be multiple instances of FatFs if
multiple drives should be handled in parallel. During mounting the
physical drive, the user can specify the partition to use (auto
detection is also possible).
 
The following changes have been done to the original FatFs distribution:

- Created C++ class FatFs for all methods and attributes

- Encapsulated all low-level dependencies to abstract interface
  block_io_interface. The constructor parameter of FatFs is a
  concrete instance implementing this interface.

- Removed the FATFS structure and as a consequence removed the FATFS
  parameter from some functions. Moved all FATFS members to private
  members of the class FatFs. Added prefix '_' to all those members
  
- Removed the 'f_' prefix of all public methods. With object orientaton,
  you know the object on which you call a method, and don't need the
  method to show that it belongs to some 'functionality'.
  
- Changed mount() parameter: The parameter now specifies the partition to
  mount: 0=auto selection, 1...4=select primary partion. mount() will
  now always check the file system and perform the mount (previously this
  was optional).
  
- Added a umount() method.

- Removed most of the volume handling code in the original distributon.
  Changed some methods accordingly.
  
TODO: Clean up the locking mechanism and use the generic mutex_interface.
